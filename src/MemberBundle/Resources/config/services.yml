services:
    # EVENT SUBSCRIBER
    member.notification.subscriber:
        class: MemberBundle\EventSubscriber\MemberNotificationSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    # EVENT LISTENER
    member.groups.credential.event:
        class: AppBundle\EventListener\AppCredentialEventListener
        arguments: ['%credentialVoterMemberGroups%', 'member.groups.credential.title']
        tags:
            - { name: kernel.event_listener, event: app.security.credential.event, method: onProvideCredential }
    member.status.credential.event:
        class: AppBundle\EventListener\AppCredentialEventListener
        arguments: ['%credentialVoterMemberStatus%', 'member.status.credential.title']
        tags:
            - { name: kernel.event_listener, event: app.security.credential.event, method: onProvideCredential }
    member.member.credential.event:
        class: AppBundle\EventListener\AppCredentialEventListener
        arguments: ['%credentialVoterMemberMembers%', 'member.member.title']
        tags:
            - { name: kernel.event_listener, event: app.security.credential.event, method: onProvideCredential }
    member.subscription.credential.event:
        class: AppBundle\EventListener\AppCredentialEventListener
        arguments: ['%credentialvotermembersubscription%', 'member.subscription.title']
        tags:
            - { name: kernel.event_listener, event: app.security.credential.event, method: onProvideCredential }
    member.setting.credential.event:
        class: AppBundle\EventListener\AppCredentialEventListener
        arguments: ['%credentialVoterMemberSetting%', 'member.member.setting.credential.title']
        tags:
            - { name: kernel.event_listener, event: app.security.credential.event, method: onProvideCredential }
    member.dashboard.bundle.event:
        class: AppBundle\EventListener\AppDashboardBundleEventListener
        arguments: ['member.dashboard.tableTitleTop10', '%member.dashboard.tableTitleTop10%']
        tags:
            - { name: kernel.event_listener, event: app.dashboard.bundle.event, method: onProvideBundle }
    member.user.profile_route.event:
        class: AppBundle\EventListener\AppUserProfileRouteEventListener
        arguments: ['member', 'member_profile']
        tags:
            - { name: kernel.event_listener, event: app.user.profile_route.event, method: onProvideProfileRoute }
    member.member.send.welcome_email:
        class: MemberBundle\EventListener\SendWelcomeEmail
        arguments: ['@app.manager.setting', '@app.email_templating', '%sendermail%']
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true }
    member.member.send.new_subscription_email:
        class: MemberBundle\EventListener\SendNewSubscriptionEmail
        arguments: ['@app.manager.setting', '@app.email_templating', '%sendermail%']
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true }
    # VOTER
    member.member.voter:
        class: AppBundle\Security\AppVoter
        autowire: true
        arguments: ['%credentialVoterMemberMembers%']
        tags:
            - {name: security.voter}
    member.groups.voter:
        class: AppBundle\Security\AppVoter
        autowire: true
        arguments: ['%credentialVoterMemberGroups%']
        tags:
            - {name: security.voter}
    member.status.voter:
        class: AppBundle\Security\AppVoter
        autowire: true
        arguments: ['%credentialVoterMemberStatus%']
        tags:
            - {name: security.voter}
    member.subscription.voter:
        class: AppBundle\Security\AppVoter
        autowire: true
        arguments: ['%credentialvotermembersubscription%']
        tags:
            - {name: security.voter}
    member.setting.voter:
        class: AppBundle\Security\AppVoter
        autowire: true
        arguments: ['%credentialVoterMemberSetting%']
        tags:
            - {name: security.voter}
    member.menu.voter:
        class: MemberBundle\security\MemberMenuVoter
        autowire: true
        arguments: ['%credentialVoterMemberMenu%', '%masterCredentialMenuMember%']
        tags:
            - {name: security.voter}
    # MANAGER
    member.manager.member:
        class: MemberBundle\Manager\MemberMemberManager
        arguments: ['@doctrine.orm.entity_manager', '@knp_paginator', '@session']
    member.manager.group:
        class: MemberBundle\Manager\MemberGroupManager
        arguments: ['@doctrine.orm.entity_manager', '@knp_paginator', '@session']
    member.manager.status:
        class: MemberBundle\Manager\MemberStatusManager
        arguments: ['@doctrine.orm.entity_manager', '@knp_paginator', '@session']
    member.manager.subscription_historical:
        class: MemberBundle\Manager\MemberSubscriptionHistoricalManager
        arguments: ['@doctrine.orm.entity_manager', '@knp_paginator', '@session']
    member.manager.subscription_fee:
        class: MemberBundle\Manager\MemberSubscriptionFeeManager
        arguments: ['@doctrine.orm.entity_manager', '@knp_paginator', '@session', '@event_dispatcher']
    member.manager.send_mail_late_payment:
         class: MemberBundle\Manager\SendMailLatePaymentManager
         arguments: ['@app.manager.send_mail']
    # FORM MODEL
    member.form.model.member_setting:
        class: MemberBundle\Form\Model\MemberSettingModel
    member.form.model.member_email_setting:
        class: MemberBundle\Form\Model\MemberEmailSettingModel
    # FORM HANDLER
    member.form.handler.member:
        class: MemberBundle\Form\Handler\MemberFormHandler
        arguments: ['@form.factory', '@service_container']
    member.form.handler.subscription_historical:
        class: MemberBundle\Form\Handler\MemberSubscriptionHistoricalFormHandler
        arguments: ['@form.factory', '@service_container']
    member.form.handler.subscription_fee:
        class: MemberBundle\Form\Handler\MemberSubscriptionFeeFormHandler
        arguments: ['@form.factory', '@service_container']
    member.form.handler.member_setting:
        class: MemberBundle\Form\Handler\MemberSettingHandler
        arguments: ['@form.factory', '@member.form.model.member_setting', '@app.manager.setting']
    member.form.handler.member_email_setting:
        class: MemberBundle\Form\Handler\MemberEmailSettingHandler
        arguments: ['@form.factory', '@member.form.model.member_email_setting', '@app.manager.setting']
    member.form.handler.member_list_filter:
        class: MemberBundle\Form\Handler\MemberListFilterHandler
        arguments: ['@form.factory']
    # CONTROLLER
    member.controller.status:
        class: MemberBundle\Controller\MemberStatusController
        arguments: ['@service_container']
    member.controller.groups:
        class: MemberBundle\Controller\MemberGroupController
        arguments: ['@service_container']
    member.controller.dashboard:
        class: MemberBundle\Controller\DashboardController
        arguments: ['@service_container']
    member.controller.setting:
        class: MemberBundle\Controller\MemberSettingController
        arguments: ['@service_container']
    # Validator
    member.validator.unique_email:
        class: MemberBundle\Validator\UniqueEmailValidator
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - {name: validator.constraint_validator, alias: member.validator.import.unique_email}
    member.validator.group_exist:
        class: MemberBundle\Validator\GroupExistValidator
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - {name: validator.constraint_validator, alias: member.validator.import.group_exist}
